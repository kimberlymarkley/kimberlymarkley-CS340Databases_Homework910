Grading Considerations
	1	If there are extra constraints that cannot be captured by the E/R diagram, list them in a supplementary text file.

	2	List any assumptions you make in the process.

	3	Your E/R diagram should contain at least six (or more) entities; otherwise, it is likely not of sufficient complexity for a CS 340 project.

	4	Make sure your diagram captures a significant number of relationships, and all those required to accomplish your project goals.

	5	For each entity set and relationship, write a short description of what it represents or models in plain English.
	◦	one or two sentences per entity set and relationship are enough
	◦	these descriptions are primarily to help me understand what you are modeling and ensure that you are modeling it correctly.



Deliverables:
1. EER PDF
2. Relational Schema PDF
3. SQL document with Create Table commands and comments, Insert Into with Sample data (cite real life sources), then queries for each table(Limit 5), 5 Sample transactions
4. a txt document with sample queries and result set

Include public git hub

Talk about reasoning behind  
- weak entity for Alien Life 
- 1 to M star for scalibility as universe is explored (also explain participation)
- Monitors Table just full of ids? used to illustrate and quantify the structural constraint that all entities are monitored (page 88-92)

<p>
    Sample Interesting Queries: 
    <br> 
    <br>
    1) Asteroids and Comets that have a mass greater than Mercury and less than Earth - select name, mass from (select name, mass from asteroid union select name, mass from comet) where mass between (select mass from planet where name='Mercury') and (select mass from planet where name='Earth') order by mass asc;
    <br>
    <br>
    2) ALIENS! Solar System Names that contain the letter combination 'ol' - select name from (select name from artificial_satellite union select name from alien_life union select name from star union select name from planet union select name from moon union select name from asteroid union select name from comet) where name like '%ol%' order by name asc;
    <br>
    <br>
    3) planets and their coresponding moons - SELECT Planet.Name, Moon.Name FROM Moon, Planet WHERE Planet.Pid=Moon.Pid ORDER BY Planet.Name ASC;
    <br>
    <br>
    4) The smallest and largest gravities from either Planets or Moons - select min(mn), max(mx) from (select max(gravity) as mx, min(gravity) as mn from planet union select max(gravity) as mx, min(gravity) as mn from moon) as subquery;
    <br>
    <br>
    5) The name and task of the satellite from Nigeria - select artificial_satellite.name, satellite_task.task from artificial_satellite, satellite_task where artificial_satellite.satid=satellite_task.satid and artificial_satellite.country_origin='Nigeria';
</p>